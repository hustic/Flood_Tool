<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="lilin" name="pytest" skipped="0" tests="8" time="56.772" timestamp="2019-10-25T07:53:44.062517"><testcase classname="test" file="test.py" line="35" name="test_get_easting_northing_from_lat_long" points="0" time="0.049"><properties><property name="single_lookup" value="(0.0006540460017276928, [False])"/><property name="multiple_lookup" value="(0.0018563329940661788, [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False])"/></properties></testcase><testcase classname="test" file="test.py" line="89" name="test_tool" points="100" time="0.000"><properties><property name="tool initialization" value="(2.397660468996037, [True])"/></properties></testcase><testcase classname="test" file="test.py" line="94" name="test_get_lat_long" points="480" time="0.081"><properties><property name="single_postcode_lookup" value="(0.0031919700049911626, [True])"/><property name="multiple_postcode_lookup" value="(0.004731369001092389, [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False])"/></properties></testcase><testcase classname="test" file="test.py" line="125" name="test_get_easting_northing_flood_probability" points="2000" time="27.724"><properties><property name="single_lookup" value="(0.021116803000040818, [True])"/><property name="multiple_lookup" value="(4.194103288995393, [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True])"/></properties></testcase><testcase classname="test" file="test.py" line="155" name="test_get_sorted_flood_probability" time="0.004"><failure message="AttributeError: &apos;numpy.ndarray&apos; object has no attribute &apos;apply&apos;">data = {&apos;flood probability file&apos;: [&apos;..&apos;, &apos;flood_tool&apos;, &apos;resources&apos;, &apos;flood_probability.csv&apos;], &apos;get_annual_flood_risk&apos;: {&apos;idx1...om_lat_long&apos;: {&apos;absolute_tolerance&apos;: 5, &apos;idx1&apos;: 0, &apos;idx2&apos;: 500, &apos;input headings&apos;: [&apos;Latitude&apos;, &apos;Longitude&apos;], ...}, ...}
testdb =      Postcode   Latitude  Longitude        Easting       Northing Probability Band  Flood Cost  Flood Risk
0     TN131...J  51.189845   0.264470  558340.033636  145839.045558             Zero  2713630.99         0.0

[1490 rows x 8 columns]
tool = &lt;flood_tool.tool.Tool object at 0x7f9e24b1cb50&gt;
record_property = &lt;function record_property.&lt;locals&gt;.append_property at 0x7f9e1a109170&gt;
record_xml_attribute = &lt;bound method _NodeReporter.add_attribute of &lt;_pytest.junitxml._NodeReporter object at 0x7f9e1d819850&gt;&gt;

    @mark.timeout(timeouts[&quot;get_sorted_flood_probability&quot;])
    def test_get_sorted_flood_probability(data, testdb, tool, record_property, record_xml_attribute):
    
        name = &apos;get_sorted_flood_probability&apos;
    
        idx1 = data[name][&apos;idx1&apos;]
        idx2 = data[name][&apos;idx2&apos;]
        idx3 = data[name][&apos;idx3&apos;]
        idx4 = data[name][&apos;idx4&apos;]
    
        args = testdb.iloc[idx1:idx2][&apos;Postcode&apos;].to_numpy().ravel()
        output = testdb.iloc[idx3:idx4][[&apos;Postcode&apos;, &apos;Probability Band&apos;]]
        output.drop_duplicates(subset=&apos;Postcode&apos;, inplace=True)
        output.set_index(&apos;Postcode&apos;, inplace=True)
    
&gt;       time, result = timing(getattr(tool, name), args)

score/test.py:171: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
score/timing.py:19: in timing
    time = timer.repeat(repeat, number=1)
/usr/lib/python3.7/timeit.py:204: in repeat
    t = self.timeit(number)
/usr/lib/python3.7/timeit.py:176: in timeit
    timing = self.inner(it, self.timer)
&lt;timeit-src&gt;:6: in inner
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;flood_tool.tool.Tool object at 0x7f9e24b1cb50&gt;
postcodes = array([&apos;TN131DP&apos;, &apos;DA9 9FD&apos;, &apos;DA5 2HY&apos;, &apos;TN133AQ&apos;, &apos;CT194EF&apos;, &apos;ME101HU&apos;,
       &apos;CT4 7DT&apos;, &apos;CT155ND&apos;, &apos;CT161JZ&apos;, &apos;CT11...ct140ng&apos;, &apos;ct7 0bn&apos;, &apos;ct9 1pn&apos;, &apos;ct110ph&apos;, &apos;ct9 1eh&apos;,
       &apos;tn147du&apos;, &apos;ct147fd&apos;, &apos;ct1 2bf&apos;, &apos;tn3 9td&apos;], dtype=object)

    def get_sorted_flood_probability(self, postcodes):
        &quot;&quot;&quot;Get an array of flood risk probabilities from a sequence of postcodes.
    
        Probability is ordered High&gt;Medium&gt;Low&gt;Very low&gt;Zero.
        Flood risk data is extracted from the `Tool` flood risk file.
    
        Parameters
        ----------
    
        postcodes: sequence of strs
            Ordered sequence of postcodes
    
        Returns
        -------
    
        pandas.DataFrame
            Dataframe of flood probabilities indexed by postcode and ordered from `High` to `Zero`,
            then by lexagraphic (dictionary) order on postcode. The index is named `Postcode`, the
            data column is named `Probability Band`. Invalid postcodes and duplicates
            are removed.
        &quot;&quot;&quot;
        a = np.array(np.unique([s.upper() for s in postcodes]))
&gt;       a = a.apply(lambda x: x[0:3] + &quot; &quot; + x[3:6] if len(x) == 6 else x)
E       AttributeError: &apos;numpy.ndarray&apos; object has no attribute &apos;apply&apos;

flood_tool/tool.py:147: AttributeError</failure></testcase><testcase classname="test" file="test.py" line="183" name="test_get_flood_cost" points="498" time="0.058"><properties><property name="single_postcode_lookup" value="(0.0037761280036647804, [True])"/><property name="multiple_postcode_lookup" value="(0.004891290001978632, [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True])"/></properties></testcase><testcase classname="test" file="test.py" line="213" name="test_get_annual_flood_risk" points="500" time="0.078"><properties><property name="single_postcode_lookup" value="(0.00524570100242272, [True])"/><property name="multiple_postcode_lookup" value="(0.006807090998336207, [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True])"/></properties></testcase><testcase classname="test" file="test.py" line="243" name="test_get_sorted_annual_flood_risk" points="0" time="25.793"><properties><property name="multiple_postcode_lookup" value="(4.121554190998722, [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False])"/></properties><system-out>Postcode
TN184NX    51.039880
CT170TW    51.145279
TN249HS    51.168991
TN255DL    51.173893
CT161RW    51.127700
             ...    
ME159XX    51.235919
TN125AD    51.213209
ME172DE    51.243888
CT140EZ    51.224367
DA119FF    51.442533
Name: Latitude, Length: 495, dtype: float64
Postcode
TN184NX    51.039880
CT170TW    51.145279
TN249HS    51.168991
TN255DL    51.173893
CT161RW    51.127700
             ...    
ME159XX    51.235919
TN125AD    51.213209
ME172DE    51.243888
CT140EZ    51.224367
DA119FF    51.442533
Name: Latitude, Length: 495, dtype: float64
Postcode
TN184NX    51.039880
CT170TW    51.145279
TN249HS    51.168991
TN255DL    51.173893
CT161RW    51.127700
             ...    
ME159XX    51.235919
TN125AD    51.213209
ME172DE    51.243888
CT140EZ    51.224367
DA119FF    51.442533
Name: Latitude, Length: 495, dtype: float64
Postcode
TN184NX    51.039880
CT170TW    51.145279
TN249HS    51.168991
TN255DL    51.173893
CT161RW    51.127700
             ...    
ME159XX    51.235919
TN125AD    51.213209
ME172DE    51.243888
CT140EZ    51.224367
DA119FF    51.442533
Name: Latitude, Length: 495, dtype: float64
Postcode
TN184NX    51.039880
CT170TW    51.145279
TN249HS    51.168991
TN255DL    51.173893
CT161RW    51.127700
             ...    
ME159XX    51.235919
TN125AD    51.213209
ME172DE    51.243888
CT140EZ    51.224367
DA119FF    51.442533
Name: Latitude, Length: 495, dtype: float64
Postcode
TN184NX    51.039880
CT170TW    51.145279
TN249HS    51.168991
TN255DL    51.173893
CT161RW    51.127700
             ...    
ME159XX    51.235919
TN125AD    51.213209
ME172DE    51.243888
CT140EZ    51.224367
DA119FF    51.442533
Name: Latitude, Length: 495, dtype: float64
</system-out></testcase></testsuite></testsuites>